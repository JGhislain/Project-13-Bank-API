swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
# Chemin de base pour toutes les API
basePath: /api/v1
schemes:
  - http
paths:
# Endpoint pour la connexion de l'utilisateur.
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
          # Référence à la définition du schéma Login
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
          # Référence à la définition de la réponse de login
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # Endpoint pour l'inscription de l'utilisateur.
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
          # Référence à la définition du schéma User
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
          # Référence à la définition de la réponse API générique
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # Endpoint pour les opérations de profil utilisateur.
  /user/profile:
    post:
      security:
      # Indique que l'authentification Bearer est nécessaire
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
          # Référence à la définition de la réponse API générique
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
      # Indique que l'authentification Bearer est nécessaire
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
          # Référence à la définition du schéma UserProfile
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
          # Référence à la définition de la réponse API générique
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # Endpoint pour les opérations de transactions.
  /transactions:
    get:
      security:
      # Indique que l'authentification Bearer est nécessaire
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get transactions for the specified period grouped by account
      description: API to get all transactions for the specified period, grouped by account
      parameters:
        - in: query
          name: period
          type: string
          description: Optional parameter to specify the period (e.g., current_month, last_month, last_week, last_year)
          required: false
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
            # Référence à la définition du groupe de transactions
              $ref: '#/definitions/TransactionGroup'
        '401':
          description: Unauthorized
    post:
      security:
      # Indique que l'authentification Bearer est nécessaire
        - Bearer: []
      tags:
        - Transaction Module
      summary: Add a new transaction
      description: API to add a new transaction
      parameters:
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
          # Référence à la définition du schéma Transaction
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created successfully
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
  # Endpoint pour les opérations spécifiques sur une transaction donnée.
  /transactions/{id}:
    get:
      security:
      # Indique que l'authentification Bearer est nécessaire
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get transaction details
      description: API to get the details of a specific transaction
      parameters:
        - in: path
          name: id
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
          # Référence à la définition du schéma Transaction
            $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
    put:
      security:
      # Indique que l'authentification Bearer est nécessaire
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update a transaction
      description: API to update an existing transaction
      parameters:
        - in: path
          name: id
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
          # Référence à la définition du schéma Transaction
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    # Indique que le token est passé dans l'en-tête
    in: header
definitions:
  # Schéma pour l'utilisateur avec des propriétés email, password, firstName, et lastName.
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  # Schéma pour les données de connexion de l'utilisateur.
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  # Schéma pour une réponse API générique avec status, message, et body.
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  # Schéma pour la réponse de connexion avec un token.
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  # Schéma pour le profil utilisateur avec firstName et lastName.
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  # Schéma pour une transaction avec accountId, type, date, description, category, et notes.
  Transaction:
    type: object
    properties:
      accountId:
        type: string
      type:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      category:
        type: string
      notes:
        type: string
  # Schéma pour un groupe de transactions avec accountId et une liste de transactions.
  TransactionGroup:
    type: object
    properties:
      accountId:
        type: string
      transactions:
        type: array
        items:
        # Référence à la définition du schéma Transaction
          $ref: '#/definitions/Transaction'